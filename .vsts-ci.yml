
resources:
  containers:
  - container: nv-bionic-wasm
    image: nventive/wasm-build:1.3


jobs:
- job: Windows

  pool:
    vmImage: 'vs2017-win2016'
    
  variables:
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget

  steps:
  - checkout: self
    clean: true

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.9.1
      checkLatest: false
    
  - task: GitVersion@5
    inputs:
      useConfigFile: true
      configFilePath: gitversion.yml
      updateAssemblyInfo: false

  - powershell: |
        cd $(build.sourcesdirectory)/src/WasmAot.UITests
        npm install
        cd $(build.sourcesdirectory)/src/Uno.Wasm.DynamicLinking.UITests
        npm install
        cd $(build.sourcesdirectory)/src/Uno.Wasm.Node.Sample.Runner
        npm install

    displayName: UI Tests npm dependencies

  - powershell: .\build\build.ps1 -script build\build.cake
    displayName: Build 

  - powershell: |
        cd $(build.sourcesdirectory)/src/Uno.Wasm.Node.Sample.Runner
        .\Validate.ps1

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)
      Contents: ' $(build.sourcesdirectory)\build\nuget\*.nupkg'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-wasm-bootstrap-drop
      ArtifactType: Container

- job: Linux

  container: nv-bionic-wasm

  workspace:
    clean: all
      
  pool:
    vmImage: 'ubuntu-16.04'

  variables:
    NUGET_PACKAGES: $(build.sourcesdirectory)/.nuget
    EMSCRIPTEN_VERSION: 1.39.4

  steps:
  - checkout: self
    clean: true
    
  - task: GitVersion@5
    inputs:
      useConfigFile: true
      configFilePath: gitversion.yml
      updateAssemblyInfo: false

  - bash: |
      cd ~
      echo Installing emscripten $(EMSCRIPTEN_VERSION)
      git clone https://github.com/emscripten-core/emsdk
      cd ~/emsdk
      ./emsdk install $(EMSCRIPTEN_VERSION)
      ./emsdk activate $(EMSCRIPTEN_VERSION)

    displayName: 'Setup Emscripten'

  - bash: |
      cd ~/emsdk
      wget https://raw.githubusercontent.com/mono/mono/27247739c68faee7b2a63ae805222d4b375d2161/sdks/builds/emscripten-pr-8457.diff
      wget https://raw.githubusercontent.com/mono/mono/27247739c68faee7b2a63ae805222d4b375d2161/sdks/builds/fix-emscripten-8511.diff
      cd ~/emsdk/upstream/emscripten
      patch -N -p1 < ~/emsdk/emscripten-pr-8457.diff
      patch -N -p1 < ~/emsdk/fix-emscripten-8511.diff

    displayName: 'Apply Emscripten Mono patches'

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.9.1
      checkLatest: false

  - bash: |
      source ~/emsdk/emsdk_env.sh
      msbuild /r /t:Publish /p:Configuration=Release src/Uno.Wasm.Bootstrap.sln

    displayName: Build 

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/Uno.Wasm.AotTests/bin/Release/netstandard2.0/publish
      Contents: '**/*.*'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - bash: |
      cd $(build.sourcesdirectory)/src/Uno.Wasm.AotTests/bin/Release/netstandard2.0/dist
      python server.py &
      cd $(build.sourcesdirectory)/src/WasmAot.UITests
      npm install
      node app

    displayName: Raytracer UI Tests 

  - bash: |
      sed -i "s/8000/8001/g" "$(build.sourcesdirectory)/src/Uno.Wasm.DynamicLinking/bin/Release/netstandard2.0/dist/server.py"
      cd $(build.sourcesdirectory)/src/Uno.Wasm.DynamicLinking/bin/Release/netstandard2.0/dist
      python server.py &
      cd $(build.sourcesdirectory)/src/Uno.Wasm.DynamicLinking.UITests
      npm install
      node app

    displayName: DynamicLinking Tests 

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-wasm-bootstrap-linux-aot
      ArtifactType: Container

- job: macOS

  pool:
    vmImage: 'macOS-10.13'

  variables:
    NUGET_PACKAGES: $(Agent.WorkFolder)/.nuget
    SourceLinkEnabled: false

  steps:
  - bash: |
      cd $(Agent.WorkFolder)
      wget https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-mac.zip
      unzip ninja-mac.zip -d ninja-mac
     
    displayName: 'Install Ninja'

  - bash: |
      cd $(Agent.WorkFolder)
      git clone https://github.com/juj/emsdk.git
      cd emsdk
      ./emsdk install latest
      ./emsdk activate latest

    displayName: 'Install Emscripten'

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.7.0
      checkLatest: false

  - bash: |
      export PATH=$PATH:$(Agent.WorkFolder)/ninja-mac
      source $(Agent.WorkFolder)/emsdk/emsdk_env.sh
      msbuild /m /r /t:Publish /p:Configuration=Release src/Uno.Wasm.Bootstrap.sln

    displayName: Build 

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/Uno.Wasm.AotTests/bin/Release/netstandard2.0/dist
      Contents: '**/*.*'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-wasm-bootstrap-macos-aot
      ArtifactType: Container
