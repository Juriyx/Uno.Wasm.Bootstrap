<Project>

	<PropertyGroup>
		<_packageBinaryPath>$(MSBuildThisFileDirectory)../tools/Uno.Wasm.Bootstrap.v0.dll</_packageBinaryPath>

		<WasmShellTasksPath Condition="!Exists('$(_packageBinaryPath)')">$(MSBuildThisFileDirectory)../bin/$(Configuration)/netstandard2.0</WasmShellTasksPath>
		<WasmShellTasksPath Condition="Exists('$(_packageBinaryPath)')">../tools</WasmShellTasksPath>

		<WasmShellIndexHtmlPath Condition="!Exists('$(_packageBinaryPath)')">$(MSBuildThisFileDirectory)../Templates/index.html</WasmShellIndexHtmlPath>
		<WasmShellIndexHtmlPath Condition="Exists('$(_packageBinaryPath)') and '$(WasmShellIndexHtmlPath)'==''">$(MSBuildThisFileDirectory)../tools/templates/index.html</WasmShellIndexHtmlPath>

		<MonoWasmRuntimeConfiguration Condition="'$(WasmRuntimeConfiguration)'==''">release</MonoWasmRuntimeConfiguration>
		<MonoRuntimeDebuggerEnabled Condition="'$(MonoRuntimeDebuggerEnabled)'==''">false</MonoRuntimeDebuggerEnabled>

		<WasmShellEnableAOT Condition="'$(WasmShellEnableAOT)'==''">false</WasmShellEnableAOT>
		
		<!-- 
		Force all applicable references to be present in the ReferenceCopyLocalPaths property.
		Otherwise, the ReferencePath property only contains reference assemblies if those are available.
		-->
		<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
	</PropertyGroup>

	<UsingTask AssemblyFile="$(WasmShellTasksPath)/Uno.Wasm.Bootstrap.v0.dll" TaskName="Uno.Wasm.Bootstrap.ShellTask_v0" />
	<UsingTask AssemblyFile="$(WasmShellTasksPath)/Uno.Wasm.Bootstrap.v0.dll" TaskName="Uno.Wasm.Bootstrap.UnoInstallSDKTask_v0" />

	<Target Name="BuildDist" AfterTargets="AfterBuild">

		<ItemGroup>
			<!-- Filter ReferenceCopyLocalPaths as it may contain pdbs as well -->
			<_AssembliesForReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths)"
																						 Condition="'%(Extension)' == '.dll'" />
		</ItemGroup>

		<UnoInstallSDKTask_v0 MonoWasmSDKUri="$(MonoWasmSDKUri)">
			<Output TaskParameter="SdkPath" PropertyName="_UnoMonoSdkPath" />
			<Output TaskParameter="PackagerBinPath" PropertyName="_UnoMonoPackagerBinPath" />
			<Output TaskParameter="PackagerProjectFile" PropertyName="_UnoMonoPackagerProjectFile" />
		</UnoInstallSDKTask_v0>

		<MSBuild Projects="$(_UnoMonoPackagerProjectFile)" Targets="Restore;Build" />
		
		<ShellTask_v0
			Assembly="$(IntermediateOutputPath)$(TargetFileName)"
			OutputPath="$(OutputPath)"
			LinkerDescriptors="@(LinkerDescriptor)"
			TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)"
			MonoWasmSDKPath="$(_UnoMonoSdkPath)"
			PackagerBinPath="$(_UnoMonoPackagerBinPath)"
			PWAManifestFile="$(WasmPWAManifestFile)"
			IndexHtmlPath="$(WasmShellIndexHtmlPath)"
			RuntimeConfiguration="$(MonoWasmRuntimeConfiguration)"
			RuntimeDebuggerEnabled="$(MonoRuntimeDebuggerEnabled)"
			MonoAOT="$(WasmShellEnableAOT)"
			Assets="@(Content)"
			ReferencePath="@(_AssembliesForReferenceCopyLocalPaths)" />
	</Target>

	<Target Name="_CleanDist" BeforeTargets="Clean">
		<ItemGroup>
			<_DistFilesToDelete Include="$(OutputPath)dist\**" />
		</ItemGroup>

		<Delete Files="@(_DistFilesToDelete)" />
	</Target>

</Project>